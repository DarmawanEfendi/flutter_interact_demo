// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is profile server only for demo",
    "title": "Swagger Profile",
    "contact": {
      "email": "darmawan.efendi@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/profiles": {
      "get": {
        "description": "Returns array of profile",
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "Find all profiles",
        "operationId": "getProfiles",
        "parameters": [
          {
            "type": "boolean",
            "description": "query for filter only favourite",
            "name": "onlyFavourite",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfilesResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      }
    },
    "/profiles/{id}/favourite": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "add profile to favourite list",
        "operationId": "postProfileFavourite",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of profile",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Profile object that needs to be added",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "delete profile from favourite list",
        "operationId": "deleteProfileFavourite",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of profile",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GeneralErrorResponse": {
      "description": "General error response",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    },
    "MetaSchema": {
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "message": {
          "description": "Message of response",
          "type": "string",
          "example": "Successfully inserted data"
        },
        "status": {
          "description": "HTTP response code",
          "type": "integer",
          "example": 200
        }
      }
    },
    "ProfileResponse": {
      "description": "Response body consist of profile object",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProfileSchema"
        },
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    },
    "ProfileSchema": {
      "type": "object",
      "required": [
        "name",
        "url",
        "is_favourite"
      ],
      "properties": {
        "id": {
          "description": "id of profile",
          "type": "integer",
          "example": 1
        },
        "is_favourite": {
          "description": "status of favourite",
          "type": "boolean",
          "example": false
        },
        "name": {
          "description": "name of profile",
          "type": "string",
          "example": "Darmawan Efendi"
        },
        "url": {
          "description": "url of profile",
          "type": "string",
          "example": "http://www.test.com"
        }
      }
    },
    "ProfilesResponse": {
      "description": "Response body consist list of profile object",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileSchema"
          }
        },
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Profile tags",
      "name": "profile"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is profile server only for demo",
    "title": "Swagger Profile",
    "contact": {
      "email": "darmawan.efendi@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/profiles": {
      "get": {
        "description": "Returns array of profile",
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "Find all profiles",
        "operationId": "getProfiles",
        "parameters": [
          {
            "type": "boolean",
            "description": "query for filter only favourite",
            "name": "onlyFavourite",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfilesResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      }
    },
    "/profiles/{id}/favourite": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "add profile to favourite list",
        "operationId": "postProfileFavourite",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of profile",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Profile object that needs to be added",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileSchema"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "profile"
        ],
        "summary": "delete profile from favourite list",
        "operationId": "deleteProfileFavourite",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of profile",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          },
          "400": {
            "description": "bad request operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "404": {
            "description": "not found operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          },
          "500": {
            "description": "internal server error operation",
            "schema": {
              "$ref": "#/definitions/GeneralErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GeneralErrorResponse": {
      "description": "General error response",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    },
    "MetaSchema": {
      "type": "object",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "message": {
          "description": "Message of response",
          "type": "string",
          "example": "Successfully inserted data"
        },
        "status": {
          "description": "HTTP response code",
          "type": "integer",
          "example": 200
        }
      }
    },
    "ProfileResponse": {
      "description": "Response body consist of profile object",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProfileSchema"
        },
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    },
    "ProfileSchema": {
      "type": "object",
      "required": [
        "name",
        "url",
        "is_favourite"
      ],
      "properties": {
        "id": {
          "description": "id of profile",
          "type": "integer",
          "example": 1
        },
        "is_favourite": {
          "description": "status of favourite",
          "type": "boolean",
          "example": false
        },
        "name": {
          "description": "name of profile",
          "type": "string",
          "example": "Darmawan Efendi"
        },
        "url": {
          "description": "url of profile",
          "type": "string",
          "example": "http://www.test.com"
        }
      }
    },
    "ProfilesResponse": {
      "description": "Response body consist list of profile object",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileSchema"
          }
        },
        "meta": {
          "$ref": "#/definitions/MetaSchema"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Profile tags",
      "name": "profile"
    }
  ]
}`))
}
